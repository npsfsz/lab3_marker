#Jae Hoon Chung, 1003126574, jae.chung@mail.utoronto.ca
#Mingyue(Shirley) Yang, 1000570018, myshirley.yang@mail.utoronto.ca

  For "generateQRcode.c": Information such as account name and issuer are encoded using the given urlEncode function and put into the required format that the "displayQRcode" takes. For the "secretHex", however, hexadecimal input format in ASCII  needs to be converted to byte representation. The "base32encode" function is then used to encode the converted byte format of "secretHex"

  For "validateQRcode.c": 
	- HMAC calculation: The algoithm is using the idea in the given reference text. First, it uses the formula H[(key ^ innerPad) || H[(key ^ outerPad) || message]]. SHA1 functions are used to obtain the hash values. The innerPad and outerPad values are set to 0x36 and 0x5c respectively. Then the "dynamicTruncate" function truncates the data from 20 bytes to a 6-digit integer.
	- HOTP: a counter "00000001"(8 bytes) is used as the added "message". The valid code is fixed.
	- TOTP: current time in second, divided by 30 (i.e. time(NULL)/30 ) is used as "message". Therefore, the valid code changes every 30 seconds.
	- Similar to "generateQRcode.c", for "secretHex", the hexadecmal input in ASCII character is converted to the needed byte number representation.


