generateQRcode
Takes as arguments and issuer (string), an account name (string), and a secret (hex as a char array). 
The secret is converted to ascii by converting the char array into a uint8_t array using strtol. 
This is then encoded in base32 by the code in encoding.c. 
The URL is composed by writing the base string (e.g "otpauth://..."), the url-encoded account name, the
url-encoded issuer and the secret in base32. 
Then displayQRcode(URL) is called to generate the QR codes and other command line outputs. 
This is done for HOTP and TOTP, with minor modifications to the URL distinguishing them. 

validateQRcode
Takes as arguments the secret and the HMAC for HOTP and TOTP. 
Computes H(opad XOR key, H(ipad XOR key, M)) and compares it to the supplied HMACs. 
opad = '\x5c' {64 times}, ipad = '\x36' {64 times}, key = secret
For HOTP, M is the 8 byte counter (hard coded to be 1 here)
For TOTP, M is the 8 byte value = current Unix Time / period (hard coded to be 30s here)
The secret is converted from char to uint8_t as before, and the hashing is done using SHA-1. 
Procedure follows the RFC docs in /doc.
