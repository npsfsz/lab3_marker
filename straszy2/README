#Oliver Straszynski, 999464379, oliver.strasz@gmail.com

ECE568 - Lab 3

///////////////////generateQRcode.c/////////////////////

First, convert the given secret so that its binary representation corresponds to the characters passed in the string.
In ASCII, a character's binary is not the same as its char value (eg. 'a' = 097 (ASCII code) = 01100001 (binary)).
Convert it so that it becomes a = 10 = 00001010.

Next step is encode the secret in base 32 using the provided function.

Next, write the otpauth://..... string (using user input and base32 encoded secret) into a buffer.

Finally, use provided displayQRcode() function to print the QR code.


//////////////////validateQRcode.c//////////////////////

For HOTP, set a counter=1 (use password once), format it properly and pass to create_and_validate().
For TOTP, set a timer (period 30s), format it properly and pass to create_and_validate().

In create_and_validate():

First, convert the secret ASCII->hex (in binary) as described above.

Next, set up ipad and opad arrays and XOR with the binary key. 

Now, build inner HMAC, using provided timer or counter and ipad(xor)key.
Then, the outer HMAC using the inner HMAC and opad(xor)key.

Finally, truncate the finished HMAC to 6 digits using code from rfc4226.pdf. 
Compare the data to the user provided value, and return result.




