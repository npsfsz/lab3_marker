#Adam Chan, 998979583, adamj.chan@mail.utoronto.ca

Generate and Validate QR Code

To build this lab just use “make” in the shell with the current directory loaded. 

Implementation

generateQRcode:

    generateQRcode [issuer] [account_name] [secret_key]

The command, generateQRcode, produces an HOTP and TOTP QR code based on the given issuer,
account name, and secret key

* Pad secret key with leading zeros to length 20
* Convert to base 32
* Build URIs for HOTP and TOTP
* Pass URIs to display function

validateQRcode:

    validateQRcode [secret_key] [hotp_token] [totp_token]

The command, validateQRcode, validates that the given HOTP and TOTP tokens correspond to the
given secret key.


* Pad secret key K with trailing zeros to length 64
* Using H = SHA1, C = counter (if HOTP) or currentTime/30 (if TOTP), 
	opad = 0x5C repeated 64 times, and ipad = 0x36 repeated 64 times, perform
	HMAC(K, C) = H(key ^ opad || H(key ^ ipad || C)
* Set an offset equal to the lower 4 bits of the last byte of the HMAC
* Set DBC1 equal to the 4 bytes HMAC[offset]...HMAC[offset+3]
* Set DBC2 = DBC1 & 0x7fffffff (mask the most significant bit)
* Return DBC2/10^6 as the HOTP or TOTP
* Compare these values to the given values
